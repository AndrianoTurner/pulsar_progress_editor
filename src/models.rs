use serde;
#[derive(Debug, serde::Serialize, serde::Deserialize)]
pub struct ProgressData {
    pub completed_fb_campaign: bool,
    pub jumps_completed: i32,
    pub jumps_completed_per_class: [i32; 5],
    pub blind_jumps_completed: i32,
    pub levels_earned: i32,
    pub levels_earned_per_class: [i32; 5],
    pub pawn_deaths_total: i32,
    pub crew_deaths_total: i32,
    pub biscuits_sold_individual_total: i32,
    pub max_crew_level_reached: i32,
    pub missions_completed: i32,
    pub vulrog_discovered: bool,
    pub levels_earned_per_faction: [i32; 6],
    pub enemy_ships_destroyed: i32,
    pub talents_unlocked: i32,
    pub credits_earned: i32,
    pub credits_spent: i32,
    pub damage_dealt_pawn: i32,
    pub damage_taken_pawn: i32,
    pub damage_dealt_ship: i32,
    pub damage_taken_ship: i32,
    pub shots_fired: i32,
    pub system_health_healed: f32,
    pub footsteps_taken: i32,
    pub max_chaos_level_reached: f32,
    pub turret_shots_fired: i32,
    pub races_completed_bit_field: i32,
    pub extorts_attempted: i32,
    pub diplomacy_attempted: i32,
    pub pawn_hp_healed: f32,
    pub any_ending_completed: bool,
    pub cu_ending_completed: bool,
    pub aog_ending_completed: bool,
    pub wd_ending_completed: bool,
    pub fb_ending_completed: bool,
    pub keep_it_ending_completed: bool,
    pub free_it_ending_completed: bool,
    pub destroy_it_ending_completed: bool,
    pub abyss_ending_completed: bool,
    pub missions_ids_completed: Vec<i32>,
    pub unlocks_opened: Vec<UnlockID>,
    pub opened_ship_unlocks: Vec<ShipUnlockID>,
    pub visited_sector_types_datasets: Vec<i32>,
    pub visited_sector_type_max_entry_id: i32,
}
#[derive(Debug, serde::Serialize, serde::Deserialize)]
pub struct UnlockID {
    pub pawn_type: i32,
    pub cosmetic_type: i32,
    pub cosmetic_id: i32,
}

#[derive(Debug, serde::Serialize, serde::Deserialize)]
pub struct ShipUnlockID {
    pub ship_type: i32,
    pub variant: i32,
}

impl Default for ProgressData {
    fn default() -> Self {
        Self {
            completed_fb_campaign: false,
            jumps_completed: 0,
            jumps_completed_per_class: [0i32; 5],
            blind_jumps_completed: 0,
            levels_earned: 0,
            levels_earned_per_class: [0i32; 5],
            pawn_deaths_total: 0,
            crew_deaths_total: 0,
            biscuits_sold_individual_total: 0,
            max_crew_level_reached: 0,
            missions_completed: 0,
            vulrog_discovered: false,
            levels_earned_per_faction: [0i32; 6],
            enemy_ships_destroyed: 0,
            talents_unlocked: 0,
            credits_earned: 0,
            credits_spent: 0,
            damage_dealt_pawn: 0,
            damage_taken_pawn: 0,
            damage_dealt_ship: 0,
            damage_taken_ship: 0,
            shots_fired: 0,
            system_health_healed: 0.,
            footsteps_taken: 0,
            max_chaos_level_reached: 0.,
            turret_shots_fired: 0,
            races_completed_bit_field: 0,
            extorts_attempted: 0,
            diplomacy_attempted: 0,
            pawn_hp_healed: 0.,
            any_ending_completed: false,
            cu_ending_completed: false,
            aog_ending_completed: false,
            wd_ending_completed: false,
            fb_ending_completed: false,
            keep_it_ending_completed: false,
            free_it_ending_completed: false,
            destroy_it_ending_completed: false,
            abyss_ending_completed: false,
            missions_ids_completed: Vec::new(),
            unlocks_opened: Vec::new(),
            opened_ship_unlocks: Vec::new(),
            visited_sector_types_datasets: Vec::new(),
            visited_sector_type_max_entry_id: 0,
        }
    }
}
